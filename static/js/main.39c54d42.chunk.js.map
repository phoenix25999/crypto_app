{"version":3,"sources":["assets/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/CryptoDetails.jsx","services/crytoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/Loader.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["module","exports","Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","style","width","src","Icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","icon","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getCryptoExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetCryptoExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangeList","exchanges","map","exchange","key","id","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","HTMLReactParser","description","Cryptocurrencies","cryptosList","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","lg","extra","alt","hoverable","price","marketCap","change","Option","Select","CryptoDetails","useParams","setTimePeriod","coinHistory","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","currentPrice","coinName","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","sm","background","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","LineChart","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","console","log","Loader","App","exact","path","color","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.39c54d42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cryptocurrency.88532732.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { NavLink } from \"react-router-dom\";\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport Icon from '../assets/cryptocurrency.png';\n\nconst Navbar = () => {\n\n    const [activeMenu, setActiveMenu] = useState(true);\n    const [screenSize, setScreenSize] = useState(null);\n\n    useEffect(() => {\n        const handleResize = () => setScreenSize(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n\n        handleResize();\n\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n        if(screenSize < 768) {\n            setActiveMenu(false);\n        } else {\n            setActiveMenu(true);\n        }\n    }, [screenSize]);\n\n    return (\n        <div className=\"nav-container\" style={{width: '100%'}}>\n            <div className=\"logo-container\">\n                <Avatar src={Icon} size=\"large\" />\n                <Typography.Title level={2} className=\"logo\">\n                    <NavLink to='/'>Cryptoverse</NavLink>\n                </Typography.Title>\n                <Button className=\"menu-control-container\" onClick={()=>setActiveMenu(!activeMenu)}>\n                    <MenuOutlined />\n                </Button>\n            </div>\n            {activeMenu &&\n            <Menu theme=\"dark\">\n                <Menu.Item icon={<HomeOutlined />}>\n                    <NavLink to=\"/\">Home</NavLink>\n                </Menu.Item>\n                <Menu.Item icon={<FundOutlined />}>\n                    <NavLink to=\"/cryptocurrencies\">Cryptocurrencies</NavLink>\n                </Menu.Item>\n                <Menu.Item icon={<MoneyCollectOutlined />}>\n                    <NavLink to=\"/exchanges\">Exchanges</NavLink>\n                </Menu.Item>\n                <Menu.Item icon={<BulbOutlined />}>\n                    <NavLink to=\"/news\">News</NavLink>\n                </Menu.Item>\n            </Menu>}\n        </div>\n    );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '810d3cd9d6msh6ecca2d27e31fe3p173eefjsne0e85b6990e9'\n}\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders});\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins?limit=${count}`)\n        }),\n        getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`)\n        }),\n        getCryptoHistory: builder.query({\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n        }),\n        getCryptoExchanges: builder.query({\n            query: () => createRequest(`/exchanges`)\n        }),\n    }),\n});\n\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoHistoryQuery,\n    useGetCryptoExchangesQuery,\n} = cryptoApi;\n\n// var options = {\n//     method: 'GET',\n//     url: 'https://coinranking1.p.rapidapi.com/stats',\n//     headers: {\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n//       'x-rapidapi-key': '810d3cd9d6msh6ecca2d27e31fe3p173eefjsne0e85b6990e9'\n//     }\n//   };\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { Cryptocurrencies, News, Loader } from '.';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n\n    const { data, isFetching } = useGetCryptosQuery(10);\n    const globalStats = data?.data?.stats;\n    if(isFetching) return <Loader />;\n\n    return (\n        <>\n            <Title level={2} className=\"heading\">\n                Global Crypto Stats\n            </Title>\n            <Row>\n                <Col span={12}>\n                    <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} />\n                </Col>\n            </Row>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\n                <Title level={3} className=\"show-more\"><Link to='/cryptocurrencies'>Show More</Link></Title>\n            </div>\n            <Cryptocurrencies simplified />\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n                <Title level={3} className=\"show-more\"><Link to='/news'>Show More</Link></Title>\n            </div>\n            <News simplified />\n        </>\n    );\n};\n\nexport default Homepage;\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\nimport { Loader } from './';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n\n    const { data, isFetching } = useGetCryptoExchangesQuery();\n    const exchangeList = data?.data?.exchanges;\n\n    if(isFetching) return <Loader />;\n\n    return (\n        <>\n            <Row>\n                <Col span={6}>Exchanges</Col>\n                <Col span={6}>24h Trade Volume</Col>\n                <Col span={6}>Markets</Col>\n                <Col span={6}>Change</Col>\n            </Row>\n            <Row>\n                {exchangeList?.map(exchange => (\n                    <Col span={24}>\n                        <Collapse>\n                            <Panel\n                                key={exchange.id}\n                                showArrow={false}\n                                header={(\n                                    <Row key={exchange.id}>\n                                        <Col span={6}>\n                                            <Text><strong>{exchange.rank}.</strong></Text>\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                                            <Text><strong>{exchange.name}</strong></Text>\n                                        </Col>\n                                        <Col span={6}>{millify(exchange.volume)}</Col>\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                                        <Col span={6}>{millify(exchange.marketShare)}</Col>\n                                    </Row>\n                                )}\n                            >\n                                {HTMLReactParser(exchange.description || '')}\n                            </Panel>\n                        </Collapse>\n                    </Col>\n                ))}\n            </Row>\n        </>\n    );\n};\n\nexport default Exchanges;\n","import React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Card, Row, Col, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { Loader } from './';\n\nconst Cryptocurrencies = ({ simplified }) => {\n\n    const count = simplified ? 10 : 100;\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(()=> {\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n        setCryptos(filteredData);\n\n    }, [cryptosList, searchTerm]);\n\n    if(isFetching) return <Loader />;\n\n    return (\n        <>\n            {!simplified &&\n                <div className=\"search-crypto\">\n                    <Input placeholder=\"Search Cryptocurrency\" onChange={(e)=>setSearchTerm(e.target.value)} />\n                </div>\n            }\n            <Row gutter={[32,32]} className=\"crypto-card-container\">\n                {\n                    cryptos?.map(currency => (\n                        <Col xs={24} lg={6} className=\"crypto-card\" key={currency.id}>\n                            <Link to={`/crypto/${currency.id}`}>\n                                <Card\n                                    title={`${currency.rank}. ${currency.name}`}\n                                    extra={<img src={currency.iconUrl} className=\"crypto-image\" alt=\"\" />}\n                                    hoverable\n                                >\n                                    <p>Price: {millify(currency.price)}</p>\n                                    <p>Market Cap: {millify(currency.marketCap)}</p>\n                                    <p>Daily Change: {millify(currency.change)}</p>\n                                </Card>\n                            </Link>\n                        </Col>\n                    ))\n                }\n            </Row>\n        </>\n    );\n};\n\nexport default Cryptocurrencies;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport { LineChart, Loader } from './';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n    const { coinId } = useParams();\n    const [timePeriod, setTimePeriod] = useState('7d');\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n    const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod});\n    const cryptoDetails = data?.data?.coin;\n\n    if (isFetching) return <Loader />;\n\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n    const stats = [\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n    ];\n\n    const genericStats = [\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n        { title: 'Approved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n    ];\n\n    return (\n        <Col className=\"coin-detail-container\">\n            <Col className=\"coin-heading-container\">\n                <Title level={2} className=\"coin-name\">\n                    {cryptoDetails.name} {cryptoDetails.slug} { /*slug means alternate name for the crypto */}\n                </Title>\n                <p>\n                    {cryptoDetails.name} live price in US dollars.\n                    View value statistics, market cap and supply.\n                </p>\n            </Col>\n            <Select\n                defaultValue=\"7d\"\n                className=\"select-timeperiod\"\n                placeholder=\"Select Time Period\"\n                onChange={(value) => setTimePeriod(value)}\n            >\n                {time.map(date => <Option key={date}>{date}</Option>)}\n            </Select>\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n            <Col className=\"stats-container\">\n                <Col className=\"coin-value-statistics\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">\n                            {cryptoDetails.name} Value Statistics\n                        </Title>\n                    </Col>\n                    <p>\n                        An overview showing the stats of {cryptoDetails.name}\n                    </p>\n                    {\n                        stats.map(({ icon, title, value }) => (\n                            <Col className=\"coin-stats\">\n                                <Col className=\"coin-stats-name\">\n                                    <Text>{icon}</Text>\n                                    <Text>{title}</Text>\n                                </Col>\n                                <Text className=\"stats\">{value}</Text>\n                            </Col>\n                        ))\n                    }\n                </Col>\n                <Col className=\"other-stats-info\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">\n                            Other Statistics\n                        </Title>\n                        <p>\n                            An overview showing the stats of all cryptocurrencies\n                        </p>\n                    </Col>\n                    {\n                        genericStats.map(({ icon, title, value }) => (\n                            <Col className=\"coin-stats\">\n                                <Col className=\"coin-stats-name\">\n                                    <Text>{icon}</Text>\n                                    <Text>{title}</Text>\n                                </Col>\n                                <Text className=\"stats\">{value}</Text>\n                            </Col>\n                        ))\n                    }\n                </Col>\n            </Col>\n            <Col className=\"coin-desc-link\">\n                <Row className=\"coin-desc\">\n                    <Title level={3} className=\"coin-details-heading\">\n                        What is {cryptoDetails.name} ?\n                        {HTMLReactParser(cryptoDetails.description)}\n                    </Title>\n                </Row>\n                <Col className=\"coin-links\">\n                    <Title level={3} className=\"coin-details-heading\">\n                        {cryptoDetails.name} Links\n                    </Title>\n                    {cryptoDetails.links.map(link => (\n                        <Row className=\"coin-link\" key={link.name}>\n                            <Title level={5} className=\"link-name\">\n                                {link.type}\n                            </Title>\n                            <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {link.name}\n                            </a>\n                        </Row>\n                    ))}\n                </Col>\n            </Col>\n        </Col>\n    );\n};\n\nexport default CryptoDetails;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': '810d3cd9d6msh6ecca2d27e31fe3p173eefjsne0e85b6990e9'\n};\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders});\n\nexport const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptoNews: builder.query({\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\n        })\n    })\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n\n","import React, { useState } from 'react';\nimport { Select, Typography, Card, Row, Col, Avatar } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptoNewsQuery } from '../services/crytoNewsApi';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { Loader } from './';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst News = ({ simplified }) => {\n\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory: newsCategory, count: simplified ? 6 : 12 });\n    const { data } = useGetCryptosQuery(100);\n\n    if(!cryptoNews?.value) return <Loader />;\n\n    return (\n        <Row gutter={[24, 24]}>\n            {\n                !simplified && (\n                    <Col span={24}>\n                        <Select\n                            showSearch\n                            className=\"select-news\"\n                            placeholder=\"Select a Crypto\"\n                            optionFilterProp=\"children\"\n                            onChange={(value)=>setNewsCategory(value)}\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        >\n                            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n                            {data?.data?.coins.map(coin => <Option value={coin.name}>{coin.name}</Option>)}\n                        </Select>\n                    </Col>\n                )\n            }\n            {\n                cryptoNews?.value?.map((news, i) => (\n                    <Col xs={24} sm={12} lg={8} key={i}>\n                        <Card hoverable className=\"news-card\">\n                            <div className=\"bg-image\" style={{background:`url(${news?.image?.thumbnail?.contentUrl || demoImage}) no-repeat center/cover`}}>\n                                <div className=\"overlay\"></div>\n                            </div>\n                            <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <div className=\"news-image-container\">\n                                    <Title className=\"news-title\" level={4}>{news.name}</Title>\n                                    {/* <img style={{ maxHeight: '100px', maxWidth: '200px' }} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" /> */}\n                                </div>\n                                <p>\n                                    {\n                                        news.description > 100 ?\n                                            `${news.description.substring(0, 100)} ...`\n                                            :\n                                            news.description\n                                    }\n                                </p>\n                                <div className=\"provider-container\">\n                                    <div>\n                                        <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\n                                        <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                                    </div>\n                                    <Text className=\"time\">{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n                                </div>\n                            </a>\n                        </Card>\n                    </Col>\n                ))\n            }\n        </Row>\n    );\n};\n\nexport default News;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n\n    const coinPrice = [];\n    const coinTimestamp = [];\n\n    for(let i = 0; i<coinHistory?.data?.history?.length; i += 1) {\n        coinPrice.push(coinHistory.data.history[i].price);\n    }\n\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n      }\n\n\n    const data = {\n        labels: coinTimestamp,\n        datasets: [\n            {\n                label: 'Price in USD',\n                data: coinPrice,\n                fill: false,\n                backgroundColor: '#0071bd',\n                borderColor: '#0071bd',\n            },\n        ],\n    };\n\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true\n                    },\n                },\n            ],\n        },\n    };\n\n    console.log(data);\n    console.log(options);\n\n    return (\n        <>\n            <Row className=\"chart-header\">\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\n                <Col className=\"price-container\">\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n                </Col>\n            </Row>\n            <Line data={data} options={options} />\n        </>\n    );\n};\n\nexport default LineChart;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <Spin />\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\nimport { Navbar, Homepage, Exchanges, Cryptocurrencies, CryptoDetails, News } from './components';\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div className=\"navbar\">\n                <Navbar />\n            </div>\n            <div className=\"main\">\n                <Layout>\n                    <div className=\"routes\">\n                        <Switch>\n                            <Route exact path='/'>\n                                <Homepage />\n                            </Route>\n                            <Route exact path='/exchanges'>\n                                <Exchanges />\n                            </Route>\n                            <Route exact path='/cryptocurrencies'>\n                                <Cryptocurrencies />\n                            </Route>\n                            <Route exact path='/crypto/:coinId'>\n                                <CryptoDetails />\n                            </Route>\n                            <Route exact path='/news'>\n                                <News />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Layout>\n                <div className=\"footer\">\n                    <Typography.Title level={5} style={{ color: '#fff', textAlign: 'center' }}>\n                        Cryptoverse <br />\n                        Al rights reserved\n                    </Typography.Title>\n                    <Space>\n                        <Link to='/home'>Home</Link>\n                        <Link to='/exchanges'>Exchanges</Link>\n                        <Link to='/news'>News</Link>\n                    </Space>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import  { configureStore } from '@reduxjs/toolkit';\n\nimport  { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/crytoNewsApi';\n\nexport default configureStore({\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}